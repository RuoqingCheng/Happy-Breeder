# Generated by Django 2.2 on 2020-07-26 02:04

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
from django.utils.timezone import utc
import happy_breeder_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Breeder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nickname', models.CharField(max_length=50)),
                ('fortune', models.IntegerField(default=100)),
                ('experience', models.IntegerField(default=0)),
                ('house_level', models.IntegerField(choices=[(0, 'start house'), (1, 'advanced house'), (2, 'super house'), (3, 'noble house'), (4, 'royal house')], default=0)),
                ('litter_level', models.IntegerField(default=0)),
                ('first_login', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BreederItemThrough',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=0)),
                ('breeder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('get_furball_amount', models.IntegerField(default=0)),
                ('guest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visit_guest', to=settings.AUTH_USER_MODEL)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visit_host', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Pet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.FloatField(default=0.0, validators=[happy_breeder_app.models.validate_age])),
                ('fur_amount', models.FloatField(default=10.0, validators=[happy_breeder_app.models.validate_with_in_10])),
                ('gender', models.IntegerField(choices=[(0, 'male'), (1, 'female')], default=0)),
                ('health', models.IntegerField(default=100, validators=[happy_breeder_app.models.validate_with_in_100])),
                ('cleanness', models.IntegerField(default=100, validators=[happy_breeder_app.models.validate_with_in_100])),
                ('food_level', models.IntegerField(default=100, validators=[happy_breeder_app.models.validate_with_in_100])),
                ('last_refresh_time', models.DateTimeField(default=datetime.datetime(2020, 7, 26, 2, 4, 38, 996178, tzinfo=utc))),
                ('breed', models.CharField(default='L1R1B1W1S1', max_length=10)),
                ('pos_x', models.IntegerField(default=0)),
                ('pos_y', models.IntegerField(default=0)),
                ('price', models.IntegerField(default=50)),
                ('last_mate_time', models.DateTimeField(default=datetime.datetime(2020, 7, 26, 2, 4, 38, 996272, tzinfo=utc))),
                ('img', models.ImageField(default='oreo.png', max_length=5000, upload_to='cats/')),
                ('breeder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
                ('price', models.IntegerField(default=0)),
                ('info_type', models.CharField(choices=[('food', 'food'), ('clean', 'clean'), ('health', 'health')], default='food', max_length=50)),
                ('info_level', models.IntegerField(default=0)),
                ('picture', models.ImageField(default='store_imgs/milk.png', upload_to='store_imgs/')),
                ('breeder', models.ManyToManyField(through='happy_breeder_app.BreederItemThrough', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='breederitemthrough',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='happy_breeder_app.Item'),
        ),
        migrations.AddField(
            model_name='breeder',
            name='visitors',
            field=models.ManyToManyField(blank=True, through='happy_breeder_app.Record', to=settings.AUTH_USER_MODEL),
        ),
    ]
